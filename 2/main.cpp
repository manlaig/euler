#include <iostream>
using namespace std;

/*
Problem set:

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 5 terms will be:

1, 2, 3, 5, 8

By considering the terms in the Fibonacci sequence whose values do not exceed N, find the sum of the even-valued terms.
*/

int fibNums(unsigned long long n, unsigned long long arr[])
{
  unsigned long long i = 1;
  int curr = 2;
  arr[0] = 0;
  arr[1] = 1;
  while(i < n)
  {
    arr[curr - 1] = i;
    i = arr[curr - 1] + arr[curr - 2];
    curr++;
  }
  return curr - 1;
}

unsigned long long findEvenSum(unsigned long long arr[], int index)
{
  unsigned long long sum = 0;
  for(int i = 0; i < index; i++)
  {
    if(arr[i] != 0 && arr[i] % 2 == 0)
      sum += arr[i];
  }
  return sum;
}

int main()
{
    unsigned long long arr[1000];
    int t;
    cout << "Number of test cases: ";
    cin >> t;
    for(int a0 = 0; a0 < t; a0++)
    {
        long n;
        cout << endl << "N: ";
        cin >> n;
        int index = fibNums(n, arr);
        cout << "Sum of even fib numbers: " << findEvenSum(arr, index) << endl;  
    }
    return 0;
}